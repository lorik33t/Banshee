#!/usr/bin/env node

// Codex Executor Subagent - Fast code execution specialist
// This script acts as a bridge between Claude's Task tool and the Codex CLI

import { spawn } from 'child_process';
import { existsSync, readFileSync } from 'fs';
import { join } from 'path';

// Read task input from stdin
let input = '';
process.stdin.setEncoding('utf8');
process.stdin.on('data', (chunk) => {
  input += chunk;
});

process.stdin.on('end', () => {
  // Get Codex config
  const configPath = join(process.cwd(), 'repos', '.codex-config');
  if (!existsSync(configPath)) {
    console.error('Codex is not configured. Please authenticate first.');
    process.exit(1);
  }
  
  // Read API key from config
  const config = JSON.parse(readFileSync(configPath, 'utf8'));
  const apiKey = config.apiKey;
  
  if (!apiKey) {
    console.error('Codex API key not found. Please authenticate first.');
    process.exit(1);
  }
  
  // Run Codex with the task
  const codex = spawn('npx', [
    'https://github.com/openai/codex',
    '--api-key', apiKey,
    '--model', 'code-davinci-002',
    '--mode', 'fast',
    input
  ], {
    cwd: process.cwd(),
    env: { ...process.env, OPENAI_API_KEY: apiKey }
  });
  
  // Stream output
  codex.stdout.on('data', (data) => {
    process.stdout.write(data);
  });
  
  codex.stderr.on('data', (data) => {
    process.stderr.write(data);
  });
  
  codex.on('close', (code) => {
    process.exit(code || 0);
  });
});